---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app authelia
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: redis
      namespace: database
  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: authelia-secret
    controller:
      replicas: 2
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/authelia/authelia
      tag: master@sha256:a5ad96fcbfa30fde95cba5f26c156a6c561be77e903f6433f2bfead4a0e0cb71
    args: ["--config", "/config/configuration.yml", "--config.experimental.filters", "expand-env"]
    env:
      # AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_GROUPS_DN: ou=groups
      # AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN: ou=users
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN: dc=int,dc=sakun,dc=in
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_DISPLAY_NAME: displayName
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER: (&(member:1.2.840.113556.1.4.1941:={dn})(objectClass=group)(objectCategory=group))
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_GROUP_NAME: cn
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_IMPLEMENTATION: activedirectory
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_MAIL: mail
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_START_TLS: "false"
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_TIMEOUT: 5s
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_TLS_SKIP_VERIFY: "true"
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDRESS: ldaps://skinny.int.sakun.in:636
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER: cn=authelia,cn=users,dc=int,dc=sakun,dc=in
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_USERNAME: sAMAccountName
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER: (&(|({username_attribute}={input})({mail_attribute}={input}))(objectCategory=person)(objectClass=user)(!userAccountControl:1.2.840.113556.1.4.803:=2)(!pwdLastSet=0))
      AUTHELIA_AUTHENTICATION_BACKEND_PASSWORD_RESET_DISABLE: "true"
      AUTHELIA_AUTHENTICATION_BACKEND_REFRESH_INTERVAL: 1m
      AUTHELIA_DEFAULT_REDIRECTION_URL: https://auth.${SECRET_DOMAIN}
      AUTHELIA_DUO_API_DISABLE: "true"
      AUTHELIA_LOG_LEVEL: info
      AUTHELIA_NOTIFIER_DISABLE_STARTUP_CHECK: "true"
      AUTHELIA_NOTIFIER_SMTP_DISABLE_REQUIRE_TLS: "true"
      AUTHELIA_NOTIFIER_SMTP_ADDRESS: tcp://smtp.${SECRET_DOMAIN}:25
      AUTHELIA_NOTIFIER_SMTP_SENDER: Authelia <noreply@${SECRET_DOMAIN}>
      AUTHELIA_STORAGE_POSTGRES_ADDRESS: tcp://postgres-rw.database.svc.cluster.local:5432
      AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
      AUTHELIA_SERVER_PORT: &port 80
      AUTHELIA_SESSION_DOMAIN: ${SECRET_DOMAIN}
      AUTHELIA_SESSION_NAME: authelia-home-ops
      AUTHELIA_SESSION_REDIS_DATABASE_INDEX: 14
      AUTHELIA_SESSION_REDIS_HOST: redis.database.svc.cluster.local
      AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
      AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
      AUTHELIA_THEME: dark
      AUTHELIA_TOTP_ISSUER: ${SECRET_DOMAIN}
      AUTHELIA_WEBAUTHN_DISABLE: "true"
    envFrom: *envFrom
    enableServiceLinks: false
    service:
      main:
        ports:
          http:
            port: *port
          metrics:
            enabled: true
            port: 8080
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/health
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          # external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: &host auth.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        enabled: true
        type: configMap
        name: authelia-configmap
        subPath: configuration.yml
        mountPath: /config/configuration.yml
        readOnly: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
    resources:
      requests:
        cpu: 5m
        memory: 10Mi
      limits:
        memory: 200Mi
